function addWindLayer(s, e) {
  if(!s){
    s = '2014-03-01';
  }
  if (!e) {
    e = '2014-03-27';
  }
  var ic = ee.ImageCollection('NASA/NLDAS/FORA0125_H002')
  //.filterDate('2017-03-01', '2017-03-27');
  .select(['wind_u', 'wind_v'])
  .filterDate(s, e);
  
  var wind = ee.Image(ic.first())

  return wind
}

var wind = addWindLayer()
var layer = Map.addLayer(wind, {min:0,max:10, /*palette: ['FF0000', '0000FF']*/}, 'wind', true, 0.40);


// fire features
var fire1 = ee.Geometry.Point(-116.19, 38.75)
var fire2 = ee.Geometry.Point(-105.21, 34.96)
var fire3 = ee.Geometry.Point(-86.84, 44.34)

// fire feature collection
var fires = ee.FeatureCollection([
  ee.Feature(fire1,{}),
  ee.Feature(fire2,{}),
  ee.Feature(fire3,{})
  ])

// see fires on map
Map.addLayer(fires)

// get wind vectors
function get_wind_vectors(feature) {
  
  var geom = feature.geometry()
  var wind_point = wind.reduceRegion(ee.Reducer.mean(),geom)
  var wind_u = ee.Number(wind_point.get('wind_u'))
  var wind_v = ee.Number(wind_point.get('wind_v'))
  
  return ee.Feature(geom,{'wind_u':wind_u,'wind_v':wind_v})
  
}

var wind_vectors = fires.map(get_wind_vectors)

print(wind_vectors)

var vector = ee.Feature(wind_vectors.first())

var geom = vector.geometry()
var scale = 0.25
var du = ee.Number(vector.get('wind_u')).multiply(scale).add(geom.coordinates().get(0))
var dv = ee.Number(vector.get('wind_v')).multiply(scale).add(geom.coordinates().get(1))
var delta = ee.Geometry.Point(du,dv)

Map.addLayer(delta, {color:'blue'});

var angle;

// takes 2 ee.numbers
// finds angle from X+ axis
// Special thanks to JavaScript for the Math.atan2 function
// Special thanks to Google for this weird ee.Number object which
// requires me to do math manually
function findAngle(x, y) {
  var theta = Math.atan2(y, x);
  return theta * (180/Math.PI);
}

/*From what I understood about your question, you want to find the angle between two points given their coordinates. In that case, first find the slope of the line using the slope formula:
m=y2−y1x2−x1
m=y2−y1x2−x1
where (x1,y1)(x1,y1) and (x2,y2)(x2,y2) are coordinates on the line. Next, use this formula:
tan(θ)=m
tan⁡(θ)=m
where θθ is the angle. Therefore, the angle θθ equals:
θ=tan−1(m)
θ=tan−1⁡(m)*/



print(findAngle(vector.get('wind_u').getInfo(), vector.get('wind_v').getInfo()));

function createTriangle(center, angle, scale) {
  if (scale === undefined) {
    scale = 1;
  }
  
  if (angle === undefined) {
    angle = 90;
  }
}


var line_test = ee.Geometry.LineString([geom,delta])

Map.addLayer(line_test)







