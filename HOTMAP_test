// Test mapping function
//
// area
// fileID, satID, timestamp

// The Hawaiian Islands
var geom = ee.Geometry.LinearRing([-159.41162109375,23.008964269673108,-160.99365234375,21.739091217718574, -155.687255859375,18.093644270502615,-153.907470703125,19.694314241825747,-159.41162109375,23.008964269673108]);
var geom = ee.Geometry.Point(-155.3082, 19.2839)

// Landsat 8 collection
var ic = ee.ImageCollection('LANDSAT/LC8_L1T_TOA')
  .filterBounds(geom)
  .filterDate('2016-01-01','2016-01-5')
  .select(['B5','B6','B7'],['nir','swir1','swir2']);
  
// HOTMAP detection (returns hot pixel clusters, i.e. a feature collection per image)
function HOTMAP(img) {

  // wavebands
  var n  = img.select('nir')
  var s1 = img.select('swir1')
  var s2 = img.select('swir2')

  // alpha detection
  var a1 = s2.divide(s1).gt(1.4)
  var a2 = s2.divide(n).gt(1.4)
  var a3 = s2.gt(0.15)
  var alpha = a1.and(a2).and(a3).rename('alpha')

  // beta detection
  var b1 = s1.divide(n).gt(2)
  var b2 = s1.gt(0.5)
  var beta = b1.and(b2).rename('beta')

  // potential hot pixels
  var potentialHot = alpha.or(beta)
  var hotPixels = potentialHot.updateMask(potentialHot)
  
  // hot pixel clusters (count alpha pixels)
  var hotClusters = hotPixels.addBands(alpha).reduceToVectors({
    eightConnected:true,
    maxPixels:2e8,//might seem like a lot but MOST pixels are masked
    reducer:ee.Reducer.count()
  })
  
  // hot pixel clusters must contain alpha pixels
  var validHotClusters = hotClusters.filter(ee.Filter.gt('count', 0));
  
  // Image properties
  var fileID = img.get('system:index')
  var satID = ee.String(fileID).slice(0,3)
  var timestamp = img.get('system:time_start')
  
  // Assign properties
  var clusters = validHotClusters.map(function(feature) {
    var clusterGeom = feature.geometry()
    var clusterArea = feature.geometry().area(1) // i.e. to within 1 m2
    var cluster = ee.Feature(clusterGeom,{
      fileID:fileID,
      satID:satID,
      timestamp:timestamp,
      area:clusterArea
    })
    return cluster
  })
  
  return clusters
}

// debugging
// SINGLE IMAGE
var img = ee.Image(ic.first())
Map.addLayer(img.select(['swir2','swir1','nir']),{min:0,max:0.4},'infrared')
Map.centerObject(img)

var hot = HOTMAP(img)
print(hot)


Export.table.toDrive({'collection':hot,'fileFormat':'kml'})

Map.addLayer(hot,{color:'FF0000'},'hot_vectors')
//var fires = ic.map(HOTMAP)
//print(fires)
//print(fires.flatten())
//Map.addLayer(fires)
//Map.centerObject(img)

print(ic)